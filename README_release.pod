# Copyright (C) 2012, Parrot Foundation

=pod

=head1 NAME

README_release.pod - Readme file on how to maintain the gh-pages branch of 
the 'parrot.github.com' repository, along with the supporting gh-pages 
branches of the 'parrot-docsx' repositories.

=head1 DESCRIPTION

The purpose of this document is to supplement the release manager guide,
I<see> '/docs/project/release_manager_guide.pod' and to layout the steps
necessary to prepare, to assemble, and to publish Parrot's documentation to 
the gh-pages branch of the 'parrot.github.com' repository and the 
accompanying gh-pages branches of the supporting 'parrot-docx' repositories. 
While none of this is particularly difficult, it can be a'bit tricky.  Hence, 
the need for this guide.[1]

=head2 Assumptions

This document makes two assumptions: 

=over 4

(1) you are the release manager and, therefore, are at C<Section X> of the 
release manager guide (F<'/docs/project/release_manager_guide.pod'>). 
Specifically, this document assumes you have already ran C<make html> and

(2) 'parrot-docs4' is the relevant repository in which to store the previous
release of Parrot's documentation.[2] 

=back

=head2 Get the 'parrot.github.com' and supporting 'parrot-docsx' repositories

The first step is to obtain two repositories: (1) 'parrot.github.com' and 
(2) the relevant repository in which to store the previous version of Parrot's 
documentation. To do this, chose a directory on your local file system in which 
to clone the two Parrot repositories:

=over 4

C<cd ~/dir/in_which/to_clone/repos>

=back

and execute the following commands:

=over 4

C<git clone git@github.com:parrot/parrot.github.com.git>

C<git clone git@github.com:parrot/parrot-docs4.git>

=back

C<cd> to the C<parrot-docs4> directory and C<checkout> the C<gh-pages> branch
of the repo:

=over 4

C<git checkout gh-pages>

=back

You may confirm you are on the C<gh-pages> branch with the following command:

=over 4

C<git branches>

=back

Next, make a new directory in which to house the old documentation.  For 
example,

=over 4

C<mkdir 4.0.0>

=back

If you still have a copy of the previous release of Parrot and the 'docs/' 
directory contains the html-ized documentation, you can just copy the
entire contents of C<'docs/'> to the newly created directory in the, in this
example, C<parrot-docs4> repository. If not, you will need to do the following:

=over 4

=item 1

Obtain the C<Tag> of the previous Parrot distribution at 
C<https://github.com/parrot/parrot/tags>;

=item 2

unzip the distribution into a temporary working directory;

=item 3

run C<perl Configure.pl>[3] on the distribution;

=item 4

run C<make html>; and

=item 5

copy the contents of the C<docs/> directory to the newly created directory in 
the C<parrot-docs4> repo.

=back

=head1 FOOTNOTES

[1] Soon, we will develop a script to handle most, if not all, of the steps 
outlined in this guide.  At which time we will either re-write this document 
or entirely eliminate it.

[2] This assumption will, of course, hold only for v4.x.x of Parrot.

[3] You do NOT need to worry with any optimizations when configuring Parrot
because you only need the previous documentation release. 

=head1 COPYRIGHT

Copyright (C) 2001-2011, Parrot Foundation.

=cut
